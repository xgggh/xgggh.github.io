(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d0a41"],{"699a":function(n,e,t){"use strict";t.r(e),e["default"]={init:"  import Vue from 'vue'\n  import d2Crud from 'd2-crud-x'\n  import { d2CrudPlus } from 'd2-crud-plus'\n  import { D2pFileUploader } from 'd2p-extends'\n  // 安装扩展插件\nVue.use(D2pFileUploader, {\n  d2CrudPlus,\n  defaultType: 'cos', //默认使用腾讯云\n  cos: { //腾讯云cos配置\n    domain: 'https://d2p-demo-1251260344.cos.ap-guangzhou.myqcloud.com',\n    bucket: 'd2p-demo-1251260344',\n    region: 'ap-guangzhou',\n    secretId: '', //\n    secretKey: '', // 传了secretKey 和secretId 代表使用本地签名模式（不安全，生产环境不推荐）\n    getAuthorization  (custom) { // 不传secretKey代表使用临时签名模式,此时此参数必传（安全，生产环境推荐）\n      return request({ //请求后端获取sts授权\n        url: '/upload/cos/getAuthorization',\n        method: 'get'\n      }).then(ret => {\n        // 返回结构如下\n        // ret.data:{\n        //   TmpSecretId,\n        //   TmpSecretKey,\n        //   XCosSecurityToken,\n        //   ExpiredTime, // SDK 在 ExpiredTime 时间前，不会再次调用 getAuthorization\n        // }\n        return ret.data\n      })\n    }\n  },\n  alioss: { //阿里云oss配置\n    domain: 'https://d2p-demo.oss-cn-shenzhen.aliyuncs.com',\n    bucket: 'd2p-demo',\n    region: 'oss-cn-shenzhen',\n    accessKeyId: '',\n    accessKeySecret: '',\n    getAuthorization  (custom, context) { // 不传accessKeySecret代表使用临时签名模式,此时此参数必传（安全，生产环境推荐）\n      return request({ //请求后端获取sts授权\n        url: '/upload/alioss/getAuthorization',\n        method: 'get'\n      }).then(ret => {\n        return ret.data\n      })\n    }\n  },\n  qiniu: {\n    bucket: 'd2p-demo',\n    getToken (custom) {\n      return request({ //请求后端获取token\n        url: '/upload/qiniu/getToken',\n        method: 'get'\n      }).then(ret => {\n        return ret.data // {token:xxx,expires:xxx}\n      })\n    },\n    domain: 'http://pzrsldiu3.bkt.clouddn.com'\n  }\n})\n\n  ",crud:"export const crudOptions = {\n  columns: [\n    {\n      title: '头像',\n      key: 'avatar',\n      type: 'avatar-cropper',\n      width: 200,\n      form: {\n        props:{\n          accept:'', // 支持的文件类型\n          dialogWidth:'50%', //对话框宽度\n          cropperHeight: '', //裁剪框高度，默认为浏览器视窗的40%\n          cropper:{}, //裁剪组件参数，请参考https://github.com/fengyuanchen/cropperjs\n          limit: 1, //限制数量，默认为1\n          maxSize: 5, //限制单个文件大小，0为不限制\n        }\n      }\n    }\n  ]\n}\n\n",template:"\n  "}}}]);